const people = [
  {
    name: "–í–ª–∞–¥–∏–ª–µ–Ω",
    age: 25,
    budget: 40000,
  },
  {
    name: "–ï–ª–µ–Ω–∞",
    age: 17,
    budget: 3400,
  },
  {
    name: "–ò–≥–æ—Ä—å",
    age: 49,
    budget: 50000,
  },
  {
    name: "–ú–∏—Ö–∞–∏–ª",
    age: 15,
    budget: 1800,
  },
  {
    name: "–í–∞—Å–∏–ª–∏—Å–∞",
    age: 24,
    budget: 25000,
  },
  {
    name: "–í–∏–∫—Ç–æ—Ä–∏—è",
    age: 38,
    budget: 2300,
  },
];

for (let i = 0; i < people.length; i++) {
  //   console.log(people[i]);
}

for (let person of people) {
  //   console.log(person);
}

// *                                                          forEach
// ?    –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–±—Ä–∞—Ç—å –º–∞—Å—Å–∏–≤ –ø–æ –∏–º–µ–Ω–∞–º
people.forEach((person) => {
  // console.log(person.name);
});

// *                                                          map
// ?    –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ –∏–∑ –≤–æ–∑—Ä–∞—Å—Ç–∞ * 2

const newPeople = people.map((person, index) => {
  // return `${index + 1}: ${person.name} (${person.age})`;
  return person.age * 2;
});

// console.log(newPeople);

// *                                                          filter

// ?    –Ω—É–∂–Ω–æ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –º–∞—Å—Å–∏–≤ –∏ –æ—Å—Ç–∞–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ –∏–º–µ–Ω–∞ –ª—é–¥–µ–π, —á–µ–π –≤–æ–∑—Ä–∞—Å—Ç 18+

const adults = people
  .filter((person) => person.age >= 18)
  .map((person) => person.name);
// console.log(adults);

// *                                                          reduce

// ?    –Ω—É–∂–Ω–æ –ø—Ä–æ—Å—É–º–º–∏—Ä–æ–≤–∞—Ç—å –±—é–¥–∂–µ—Ç —É –≤—Å–µ—Ö –ª—é–¥–µ–π
const amount = people.reduce((total, person) => total + person.budget, 0);
// console.log("amount:", amount);

// *                                                          Find

// ?    –Ω—É–∂–Ω–æ –Ω–∞–π—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç –≤ –º–∞—Å—Å–∏–≤–µ –ø–æ —É—Å–ª–æ–≤–∏—é
const vika = people.find((person) => person.name === "–í–∏–∫—Ç–æ—Ä–∏—è");
// console.log("–í–∏–∫—Ç–æ—Ä–∏—è:", vika);

// *                                                          FindIndex

// ?    –Ω—É–∂–Ω–æ –Ω–∞–π—Ç–∏ –∏–Ω–¥–µ–∫—Å —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –º–∞—Å—Å–∏–≤–µ –ø–æ —É—Å–ª–æ–≤–∏—é
const vikaIndex = people.findIndex((person) => person.name === "–í–∏–∫—Ç–æ—Ä–∏—è");
// console.log("–í–∏–∫—Ç–æ—Ä–∏—è:", vikaIndex);

// *                                                          —Å–æ—á–µ—Ç–∞–Ω–∏–µ –º–µ—Ç–æ–¥–æ–≤ (—á–µ–π–Ω) - –∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ –≤—ã–≤–æ–¥–∏—Ç—å –Ω–∞ –Ω–æ–≤–æ–π —Å—Ç—Ä–æ—á–∫–µ

// ?    –Ω—É–∂–Ω–æ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –º–∞—Å—Å–∏–≤ –ø–æ —Ç–µ–º –ª—é–¥—è–º, —á–µ–π –±—é–¥–∂–µ—Ç –±–æ–ª—å—à–µ 30000 –∏ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ –∏–∑ –æ–±—ä–µ–∫—Ç–æ–≤ —Ç–∏–ø–∞ info: "name (age)", budget: number
const newPeopleBudget = people
  .filter((person) => person.budget > 30000)
  .map((person) => {
    return {
      info: `${person.name} (${person.age})`,
      budget: person.budget,
    };
  });
// console.log("newPeople:", newPeopleBudget);

// ?    –Ω—É–∂–Ω–æ –ø–æ—Å—á–∏—Ç–∞—Ç—å –¥–µ–Ω—å–≥–∏ –ª—é–¥–µ–π, —á–µ–π –±—é–¥–∂–µ—Ç –±–æ–ª—å—à–µ 30000
const newPeopleBudgetQuantity = people
  .filter((person) => person.budget > 30000)
  .map((person) => {
    return {
      info: `${person.name} (${person.age})`,
      budget: person.budget,
    };
  })
  .reduce((total, person) => total + person.budget, 0);
// console.log("newPeopleBudgetQuantity:", newPeopleBudgetQuantity);
// *                                                          –ú–µ—Ç–æ–¥ split(";") —Ä–∞–∑–±–∏–≤–∞–µ—Ç –æ–±—ä–µ–∫—Ç String –Ω–∞ –º–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫ ["1", " 2", " 3", " 3", " 4"] –ø–æ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—é
// *                                                          –ú–µ—Ç–æ–¥ indexOf(item) –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤–æ–∑–≤—Ä–∞—Ç–∏—Ç—å –∏–Ω–¥–µ–∫—Å –∏—Å–∫–æ–º–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –º–∞—Å—Å–∏–≤–µ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏–∏, –∏–ª–∏ -1 –µ—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω
// *                                                          –ú–µ—Ç–æ–¥ join() –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞ (–∏–ª–∏ –º–∞—Å—Å–∏–≤–æ–ø–æ–¥–æ–±–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞) –≤ —Å—Ç—Ä–æ–∫—É.

// ?    –Ω—É–∂–Ω–æ –∏–∑–±–∞–≤–∏—Ç—å—Å—è –æ—Ç –ø–æ–≤—Ç–æ—Ä—è—é—â–∏—Ö—Å—è —Å–∏–º–≤–æ–ª–æ–≤ –≤ —Å—Ç—Ä–æ–∫–µ
let emailAddress = "1; 2; 3; 3; 4";

if (emailAddress.indexOf(";")) {
  emailAddress = emailAddress
    .split(";")
    .reduce((acc, item) => {
      if (acc.indexOf(item) === -1) {
        acc.push(item);
      }

      return acc;
    }, [])
    .join(";");
}

// console.log("emailAddress: ", emailAddress);

// ?    –Ω—É–∂–Ω–æ –∏–∑–±–∞–≤–∏—Ç—å—Å—è –æ—Ç –ø–æ–≤—Ç–æ—Ä—è—é—â–∏—Ö—Å—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –º–∞—Å—Å–∏–≤–µ
const arrays = ["ade", "kemi", "bose", "esther", "felele", "ade"];

const uniqueArray = arrays.filter(
  (array, index) => arrays.indexOf(array) === index
);
// console.log("uniqueArray: ", uniqueArray);

// * —Å—Ç–∞—Ç—å—è –ø—Ä–æ —É–¥–∞–ª–µ–Ω–∏–µ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞     https://www.codementor.io/@sunnyedogbo/remove-array-duplicates-in-javascript-12yi1u1gdh

const numbers = [1, 2, 3, 4, 5];
const total = numbers.reduce((acc, num) => {
  return acc + num;
}, 0);
console.log("üöÄtotal: ", total);
